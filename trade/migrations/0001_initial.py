# Generated by Django 5.2.5 on 2025-09-14 18:25

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Management',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('btc_wallet_address', models.CharField(blank=True, max_length=255)),
                ('eth_wallet_address', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('full_name', models.CharField(max_length=100)),
                ('country_code', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('referial_code', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_agent', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('open', 'Open'), ('pending', 'Pending'), ('closed', 'Closed')], default='open', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agent_sessions', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_sessions', to='trade.customer')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=11)),
                ('account_number', models.CharField(default='PW2025 286873', editable=False, max_length=20, unique=True)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='trade.customer')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('sender', models.CharField(choices=[('customer', 'Customer'), ('agent', 'Agent'), ('system', 'System')], max_length=20)),
                ('content', models.TextField(blank=True, null=True)),
                ('file_msg', models.FileField(blank=True, null=True, upload_to='')),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='trade.chatsession')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('trade_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], default='BUY', max_length=4)),
                ('symbol', models.CharField(blank=True, choices=[('BTC/USD', 'BTC/USD'), ('ETH/USD', 'ETH/USD')], max_length=10, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(blank=True, choices=[('open', 'open'), ('closed', 'closed')], default='open', max_length=100, null=True)),
                ('leverage', models.CharField(choices=[('1x', '1x'), ('5x', '5x'), ('10x', '10x'), ('25x', '25x'), ('50x', '50x')], default='1x', max_length=3)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('take_profit', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('customer_profit', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('profit_loss', models.DecimalField(decimal_places=2, default=0.0, max_digits=11)),
                ('close_trade', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trade.customer')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('currency', models.CharField(choices=[('BTC/USD', 'BTC/USD'), ('ETH/USD', 'ETH/USD'), ('XRP/USD', 'XRP/USD'), ('LTC/USD', 'LTC/USD'), ('ADA/USD', 'ADA/USD')], max_length=100)),
                ('transaction_type', models.CharField(blank=True, choices=[('withdrawal', 'withdrawal'), ('deposit', 'deposit')], max_length=100, null=True)),
                ('wallet_address', models.CharField(blank=True, max_length=225, null=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('credited', 'credited'), ('failed', 'failed')], default='pending', max_length=100)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('response', models.JSONField(blank=True, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trade.customer')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
    ]
